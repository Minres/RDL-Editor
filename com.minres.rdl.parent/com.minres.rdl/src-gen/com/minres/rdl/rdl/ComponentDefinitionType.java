/**
 * generated by Xtext 2.26.0
 */
package com.minres.rdl.rdl;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Component Definition Type</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see com.minres.rdl.rdl.RdlPackage#getComponentDefinitionType()
 * @model
 * @generated
 */
public enum ComponentDefinitionType implements Enumerator
{
  /**
   * The '<em><b>SIGNAL</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SIGNAL_VALUE
   * @generated
   * @ordered
   */
  SIGNAL(0, "SIGNAL", "signal"),

  /**
   * The '<em><b>ADDRMAP</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ADDRMAP_VALUE
   * @generated
   * @ordered
   */
  ADDRMAP(1, "ADDRMAP", "addrmap"),

  /**
   * The '<em><b>REGFILE</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #REGFILE_VALUE
   * @generated
   * @ordered
   */
  REGFILE(2, "REGFILE", "regfile"),

  /**
   * The '<em><b>REG</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #REG_VALUE
   * @generated
   * @ordered
   */
  REG(3, "REG", "reg"),

  /**
   * The '<em><b>FIELD</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #FIELD_VALUE
   * @generated
   * @ordered
   */
  FIELD(4, "FIELD", "field");

  /**
   * The '<em><b>SIGNAL</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SIGNAL
   * @model literal="signal"
   * @generated
   * @ordered
   */
  public static final int SIGNAL_VALUE = 0;

  /**
   * The '<em><b>ADDRMAP</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ADDRMAP
   * @model literal="addrmap"
   * @generated
   * @ordered
   */
  public static final int ADDRMAP_VALUE = 1;

  /**
   * The '<em><b>REGFILE</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #REGFILE
   * @model literal="regfile"
   * @generated
   * @ordered
   */
  public static final int REGFILE_VALUE = 2;

  /**
   * The '<em><b>REG</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #REG
   * @model literal="reg"
   * @generated
   * @ordered
   */
  public static final int REG_VALUE = 3;

  /**
   * The '<em><b>FIELD</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #FIELD
   * @model literal="field"
   * @generated
   * @ordered
   */
  public static final int FIELD_VALUE = 4;

  /**
   * An array of all the '<em><b>Component Definition Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final ComponentDefinitionType[] VALUES_ARRAY =
    new ComponentDefinitionType[]
    {
      SIGNAL,
      ADDRMAP,
      REGFILE,
      REG,
      FIELD,
    };

  /**
   * A public read-only list of all the '<em><b>Component Definition Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<ComponentDefinitionType> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Component Definition Type</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static ComponentDefinitionType get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      ComponentDefinitionType result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Component Definition Type</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static ComponentDefinitionType getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      ComponentDefinitionType result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Component Definition Type</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static ComponentDefinitionType get(int value)
  {
    switch (value)
    {
      case SIGNAL_VALUE: return SIGNAL;
      case ADDRMAP_VALUE: return ADDRMAP;
      case REGFILE_VALUE: return REGFILE;
      case REG_VALUE: return REG;
      case FIELD_VALUE: return FIELD;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private ComponentDefinitionType(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //ComponentDefinitionType
